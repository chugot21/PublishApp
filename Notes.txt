PublishApp

BACK

Utilisation de pgAdmin 4 pour la DB postgresql

Modeles :
- User : attributs : ID, pseudo, nom, prenom, date de naissance : herite de la classe IdentityUser
        (option) photo profil
- Post : Id, titre, contenu, date de creation, utilisateur lie (one to one)

Controller :
- User : POST-login (pseudo, mdp hashe)
        GET-rechercher un user
        (option) PUT-modif user (tout peut changer sauf pseudo)
- Post : POST-create(titre, contenu) (utiliser les polling -> requete de nouveau apres un temps imparti 						pour recharger les posts.)
        DELETE dernier post uniquement et si user

=> Schema DB avec EF (entity framework)

FRONT 

Pages :
- Login -> page erreur
        	-> page des posts + bouton nouveau post : ordre chronologique + pagination des posts (20 	derniers) -> pseudo, contenu, bouton
                            -> "page" creation en modale pour nouveau post.
                            -> filtre recherche user pour voir leurs comments.
       	 -> (option) page modif profil

Ajouter des toaster pour les messages d'erreur
